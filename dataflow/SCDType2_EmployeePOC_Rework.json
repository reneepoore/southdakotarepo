{
	"name": "SCDType2_EmployeePOC_Rework",
	"properties": {
		"description": "POC for SCD Type 2 with Adventure Works Data",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TestDataForEmployee",
						"type": "DatasetReference"
					},
					"name": "srcEmployeeData"
				},
				{
					"dataset": {
						"referenceName": "TestDataForEmployeeDim",
						"type": "DatasetReference"
					},
					"name": "tgtDimEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TestDataForEmployeeDim",
						"type": "DatasetReference"
					},
					"name": "SinkNewData"
				}
			],
			"transformations": [
				{
					"name": "SetIsActive"
				},
				{
					"name": "SelectSinkColumns"
				},
				{
					"name": "SelectRename"
				},
				{
					"name": "Lkup"
				},
				{
					"name": "ExistingRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          MiddleName as string,",
				"          Title as string,",
				"          HireDate as date,",
				"          BirthDate as date,",
				"          Phone as string,",
				"          MaritalStatus as string,",
				"          EmergencyContactName as string,",
				"          EmergencyContactPhone as string,",
				"          SalariedFlag as boolean,",
				"          Gender as string,",
				"          DepartmentName as string,",
				"          StartDate as date,",
				"          EndDate as string,",
				"          Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcEmployeeData",
				"source(output(",
				"          EmployeeKey as integer,",
				"          EmpID as short,",
				"          FirstName as string,",
				"          LastName as string,",
				"          MiddleName as string,",
				"          Title as string,",
				"          HireDate as date,",
				"          BirthDate as date,",
				"          Phone as string,",
				"          MaritalStatus as string,",
				"          EmergencyContactName as string,",
				"          EmergencyContactPhone as string,",
				"          SalariedFlag as boolean,",
				"          Gender as string,",
				"          DepartmentName as string,",
				"          StartDate as date,",
				"          EndDate as string,",
				"          Status as string,",
				"          IsActive as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tgtDimEmployee",
				"srcEmployeeData derive(IsActive = 1) ~> SetIsActive",
				"SetIsActive select(mapColumn(",
				"          EmpID,",
				"          FirstName,",
				"          LastName,",
				"          MiddleName,",
				"          Title,",
				"          HireDate,",
				"          BirthDate,",
				"          Phone,",
				"          MaritalStatus,",
				"          EmergencyContactName,",
				"          EmergencyContactPhone,",
				"          SalariedFlag,",
				"          Gender,",
				"          DepartmentName,",
				"          StartDate,",
				"          EndDate,",
				"          Status,",
				"          IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSinkColumns",
				"tgtDimEmployee select(mapColumn(",
				"          SQL_EmployeeKey = EmployeeKey,",
				"          SQL_EmpID = EmpID,",
				"          SQL_FirstName = FirstName,",
				"          SQL_LastName = LastName,",
				"          SQL_MiddleName = MiddleName,",
				"          SQL_Title = Title,",
				"          SQL_HireDate = HireDate,",
				"          SQL_BirthDate = BirthDate,",
				"          SQL_Phone = Phone,",
				"          SQL_MaritalStatus = MaritalStatus,",
				"          SQL_EmergencyContactName = EmergencyContactName,",
				"          SQL_EmergencyContactPhone = EmergencyContactPhone,",
				"          SQL_SalariedFlag = SalariedFlag,",
				"          SQL_Gender = Gender,",
				"          SQL_DepartmentName = DepartmentName,",
				"          SQL_StartDate = StartDate,",
				"          SQL_EndDate = EndDate,",
				"          SQL_Status = Status,",
				"          SQL_IsActive = IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRename",
				"srcEmployeeData, SelectRename lookup(EmpID == SQL_EmpID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> Lkup",
				"Lkup filter(!isNull(EmpID)) ~> ExistingRows",
				"SelectSinkColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmpID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          MiddleName as string,",
				"          Title as string,",
				"          HireDate as date,",
				"          BirthDate as date,",
				"          Phone as string,",
				"          MaritalStatus as string,",
				"          EmergencyContactName as string,",
				"          EmergencyContactPhone as string,",
				"          SalariedFlag as boolean,",
				"          Gender as string,",
				"          DepartmentName as string,",
				"          StartDate as date,",
				"          EndDate as string,",
				"          Status as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkNewData"
			]
		}
	}
}