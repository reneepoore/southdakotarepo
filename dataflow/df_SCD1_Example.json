{
	"name": "df_SCD1_Example",
	"properties": {
		"folder": {
			"name": "Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "reportingSalesOrderHeader",
						"type": "DatasetReference"
					},
					"name": "reportingSalesOrderHeader"
				},
				{
					"dataset": {
						"referenceName": "DimAddress",
						"type": "DatasetReference"
					},
					"name": "DimAddress"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "target_SalesOrderHeader_wDate",
						"type": "DatasetReference"
					},
					"name": "targetSalesOrders"
				}
			],
			"transformations": [
				{
					"name": "SelectColumnsWShipToDescription"
				},
				{
					"name": "LkpShipToAddress"
				},
				{
					"name": "Upsert"
				},
				{
					"name": "LkpCustomerDescip"
				},
				{
					"name": "SelectColumnWCustDescrip"
				},
				{
					"name": "LkpBillToAddressDescr"
				},
				{
					"name": "SelectColumnsWBillToDescr"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     waterMarkColumn: 'ModifiedDate',",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     mode: 'read') ~> reportingSalesOrderHeader",
				"source(output(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          StateProvince as string,",
				"          CountryRegion as string,",
				"          PostalCode as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimAddress",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimCustomer",
				"LkpShipToAddress select(mapColumn(",
				"          SalesOrderID,",
				"          OrderDate,",
				"          Status,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          ShipMethod,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          ModifiedDate = reportingSalesOrderHeader@ModifiedDate,",
				"          ShipToAddressDesscription = AddressLine1,",
				"          CustomerID,",
				"          BillToAddressID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnsWShipToDescription",
				"reportingSalesOrderHeader, DimAddress lookup(ShipToAddressID == AddressID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LkpShipToAddress",
				"SelectColumnsWBillToDescr alterRow(upsertIf(true())) ~> Upsert",
				"SelectColumnsWShipToDescription, DimCustomer lookup(SelectColumnsWShipToDescription@CustomerID == DimCustomer@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LkpCustomerDescip",
				"LkpCustomerDescip select(mapColumn(",
				"          SalesOrderID,",
				"          OrderDate,",
				"          Status,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          ShipMethod,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          ModifiedDate = SelectColumnsWShipToDescription@ModifiedDate,",
				"          ShipToAddressDesscription,",
				"          CustomerDescription = CompanyName,",
				"          ModifiedDate = DimCustomer@ModifiedDate,",
				"          BillToAddressID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnWCustDescrip",
				"SelectColumnWCustDescrip, DimAddress lookup(BillToAddressID == AddressID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LkpBillToAddressDescr",
				"LkpBillToAddressDescr select(mapColumn(",
				"          SalesOrderID,",
				"          OrderDate,",
				"          Status,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          ShipMethod,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          ModifiedDate = SelectColumnWCustDescrip@ModifiedDate,",
				"          ShipToAddressDesscription,",
				"          BillToAddressDesciption = AddressLine1,",
				"          CustomerDescription",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnsWBillToDescr",
				"Upsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderID as integer,",
				"          OrderDate as timestamp,",
				"          Status as integer,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerDescription as string,",
				"          ShipToAddressDescription as string,",
				"          BillToAddressDesciption as string,",
				"          ShipMethod as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          ModifiedDate as timestamp,",
				"          CreatedDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['SalesOrderID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SalesOrderID,",
				"          OrderDate,",
				"          Status,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          ShipMethod,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          ModifiedDate,",
				"          ShipToAddressDescription = ShipToAddressDesscription,",
				"          CustomerDescription,",
				"          BillToAddressDesciption",
				"     )) ~> targetSalesOrders"
			]
		}
	}
}