{
	"name": "df_DimDisability",
	"properties": {
		"description": "Disability Dimension",
		"folder": {
			"name": "Dimensions"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CodeTables",
						"type": "DatasetReference"
					},
					"name": "vwCodeTables"
				},
				{
					"dataset": {
						"referenceName": "Disability",
						"type": "DatasetReference"
					},
					"name": "srcDisability"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimensionTargetTesting",
						"type": "DatasetReference"
					},
					"name": "tgtDimDisability"
				}
			],
			"transformations": [
				{
					"name": "DisabilityType"
				},
				{
					"name": "DisabilityMode"
				},
				{
					"name": "CompetencyStatus"
				},
				{
					"name": "SelectSrcColumns"
				},
				{
					"name": "drvTrimColumns"
				},
				{
					"name": "SelectTrimColumns"
				},
				{
					"name": "LookupType"
				},
				{
					"name": "SelectType"
				},
				{
					"name": "LookupMode"
				},
				{
					"name": "SelectMode"
				},
				{
					"name": "LookupStatus"
				},
				{
					"name": "SelectStatus"
				},
				{
					"name": "drvNullValues"
				},
				{
					"name": "SelectNullValues"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TABLENAME as string,",
				"          CODE as string,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> vwCodeTables",
				"source(output(",
				"          EVIDENCEID as long,",
				"          CASEPARTICIPANTROLEID as long,",
				"          DISABILITYTYPE as string,",
				"          DISABILITYDURATION as string,",
				"          DISABILITYSTARTDATE as date,",
				"          DISABILITYENDDATE as date,",
				"          ESTABLISHEDDISABILITYMODE as string,",
				"          BLINDREGISTERIND as string,",
				"          BLINDREGISTERENDDATE as date,",
				"          COMMENTS as string,",
				"          PREVCHILDCRITERIAIND as string,",
				"          IS1619BRECIPIENTIND as string,",
				"          COMPETENCYSTATUS as string,",
				"          DATECOMPETENCYDETERMINED as date,",
				"          CATEGORIESOFBRAININJURY as string,",
				"          VERSIONNO as integer,",
				"          LASTWRITTEN as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcDisability",
				"vwCodeTables filter(TABLENAME=='DisabilityType') ~> DisabilityType",
				"vwCodeTables filter(TABLENAME=='DisabilityMode') ~> DisabilityMode",
				"vwCodeTables filter(TABLENAME=='CompetencyStatus') ~> CompetencyStatus",
				"srcDisability select(mapColumn(",
				"          EVIDENCEID,",
				"          CASEPARTICIPANTROLEID,",
				"          DISABILITYTYPE,",
				"          DISABILITYDURATION,",
				"          DISABILITYSTARTDATE,",
				"          DISABILITYENDDATE,",
				"          ESTABLISHEDDISABILITYMODE,",
				"          IS1619BRECIPIENTIND,",
				"          COMPETENCYSTATUS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSrcColumns",
				"SelectSrcColumns derive(each(match(type=='string'), $$+'_Trim' = trim($$))) ~> drvTrimColumns",
				"drvTrimColumns select(mapColumn(",
				"          EVIDENCEID,",
				"          CASEPARTICIPANTROLEID,",
				"          DISABILITYSTARTDATE,",
				"          DISABILITYENDDATE,",
				"          DISABILITYTYPE_Trim,",
				"          DISABILITYDURATION_Trim,",
				"          ESTABLISHEDDISABILITYMODE_Trim,",
				"          IS1619BRECIPIENTIND_Trim,",
				"          COMPETENCYSTATUS_Trim",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectTrimColumns",
				"SelectTrimColumns, DisabilityType lookup(DISABILITYTYPE_Trim == CODE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupType",
				"LookupType select(mapColumn(",
				"          EVIDENCEID,",
				"          CASEPARTICIPANTROLEID,",
				"          DISABILITYSTARTDATE,",
				"          DISABILITYENDDATE,",
				"          DISABILITYDURATION_Trim,",
				"          ESTABLISHEDDISABILITYMODE_Trim,",
				"          IS1619BRECIPIENTIND_Trim,",
				"          COMPETENCYSTATUS_Trim,",
				"          DisablilityType = DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectType",
				"SelectType, DisabilityMode lookup(ESTABLISHEDDISABILITYMODE_Trim == CODE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupMode",
				"LookupMode select(mapColumn(",
				"          EVIDENCEID,",
				"          CASEPARTICIPANTROLEID,",
				"          DISABILITYSTARTDATE,",
				"          DISABILITYENDDATE,",
				"          DISABILITYDURATION_Trim,",
				"          IS1619BRECIPIENTIND_Trim,",
				"          COMPETENCYSTATUS_Trim,",
				"          DisablilityType,",
				"          DisabilityEstablishedMode = DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectMode",
				"SelectMode, CompetencyStatus lookup(COMPETENCYSTATUS_Trim == CODE,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupStatus",
				"LookupStatus select(mapColumn(",
				"          EVIDENCEID,",
				"          CASEPARTICIPANTROLEID,",
				"          DISABILITYSTARTDATE,",
				"          DISABILITYENDDATE,",
				"          DISABILITYDURATION_Trim,",
				"          IS1619BRECIPIENTIND_Trim,",
				"          DisablilityType,",
				"          DisabilityEstablishedMode,",
				"          DisabilityCompetencyStatus = DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectStatus",
				"SelectStatus derive(column1 = ERROR_FUNCTION(''),",
				"          each(match(type=='string'), $$+'_Trim' = trim($$))) ~> drvNullValues",
				"drvNullValues select(mapColumn(",
				"          EvidenceID = EVIDENCEID,",
				"          CaseParticipantRoleID = CASEPARTICIPANTROLEID,",
				"          DisabilityStartDate = DISABILITYSTARTDATE,",
				"          DisabilityEndDate = DISABILITYENDDATE,",
				"          DisabilityDuration = DISABILITYDURATION_Trim,",
				"          Disability1619BFlag = IS1619BRECIPIENTIND_Trim,",
				"          DisablilityType,",
				"          DisabilityEstablishedMode,",
				"          DisabilityCompetencyStatus,",
				"          column1,",
				"          DISABILITYDURATION_Trim_Trim,",
				"          IS1619BRECIPIENTIND_Trim_Trim,",
				"          DisablilityType_Trim,",
				"          DisabilityEstablishedMode_Trim,",
				"          DisabilityCompetencyStatus_Trim",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectNullValues",
				"SelectNullValues sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string",
				"     ),",
				"     partitionFileNames:['DimDisability.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> tgtDimDisability"
			]
		}
	}
}